/*
 * generated by Xtext 2.23.0
 */
package org.palladiosimulator.dataflow.dictionary.characterized.dsl.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.palladiosimulator.dataflow.dictionary.characterized.DataDictionaryCharacterized.DataDictionaryCharacterized
import org.palladiosimulator.dataflow.dictionary.characterized.DataDictionaryCharacterized.Enumeration
import org.palladiosimulator.dataflow.dictionary.characterized.dsl.services.CharacterizedDataDictionaryGrammarAccess

class CharacterizedDataDictionaryFormatter extends AbstractFormatter2 {
	
	@Inject extension CharacterizedDataDictionaryGrammarAccess

	def dispatch void format(DataDictionaryCharacterized dataDictionaryCharacterized, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (enumeration : dataDictionaryCharacterized.enumerations) {
			enumeration.format
		}
		for (characteristicType : dataDictionaryCharacterized.characteristicTypes) {
			characteristicType.format
		}
		for (behaviorDefinition : dataDictionaryCharacterized.behaviorDefinitions) {
			behaviorDefinition.format
		}
	}

	def dispatch void format(Enumeration enumeration, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (literal : enumeration.literals) {
			literal.format
		}
	}
	
	// TODO: implement for BehaviorDefinition, Assignment, And, Or, Not
}
