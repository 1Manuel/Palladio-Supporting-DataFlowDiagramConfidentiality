/*
 * generated by Xtext 2.22.0
 */
package org.palladiosimulator.dataflow.dictionary.characterized.behavior.dsl.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.palladiosimulator.dataflow.dictionary.characterized.DataDictionaryCharacterized.Assignment
import org.palladiosimulator.dataflow.dictionary.characterized.DataDictionaryCharacterized.BehaviorDefinition
import org.palladiosimulator.dataflow.dictionary.characterized.behavior.dsl.services.BehaviorDefinitionGrammarAccess

class BehaviorDefinitionFormatter extends AbstractFormatter2 {
	
	@Inject extension BehaviorDefinitionGrammarAccess

	def dispatch void format(BehaviorDefinition behaviorDefinition, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (pin : behaviorDefinition.inputs) {
			pin.format
		}
		for (pin : behaviorDefinition.outputs) {
			pin.format
		}
		for (assignment : behaviorDefinition.assignments) {
			assignment.format
		}
	}

	def dispatch void format(Assignment assignment, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		assignment.lhs.format
		assignment.rhs.format
	}
	
	// TODO: implement for And, Or, Not
}
